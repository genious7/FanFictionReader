apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.spicymango.fanfictionreader"
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 70
        versionName "1.49b"
    }

    lintOptions {
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug{
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    compile project(':kolavar')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}

// If the signing configurations are defined in the local gradle.properties, add them to the script
if (project.hasProperty('key.alias')) {
    android.signingConfigs.release.keyAlias = project.property('key.alias')
    android.signingConfigs.release.keyPassword = project.property('key.alias.password')
    android.signingConfigs.release.storeFile = file(project.property('key.store'))
    android.signingConfigs.release.storePassword = project.property('key.store.password')
}
